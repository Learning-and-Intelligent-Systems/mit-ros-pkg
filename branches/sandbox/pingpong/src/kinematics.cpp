#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <bingham/util.h>
#include "kinematics.h"

// warning: keep this at the bottom of the includes!
#include <lapacke.h>



//-------------- Kinematics ----------------//


double *joints_to_paddle(double *joint_angles)
{
  double P[4] = {0,0,.1,1};   // paddle position
  double N[4] = {.1,0,.1,1};  // paddle normal

  double **A = new_matrix2(4,4);

  //double t0 = get_time_ms();  //dbug

  for(int i = 7; i > 0; i--) {

    double a, alpha, d;
    switch(i) {
    case 1: a = 0; alpha = -M_PI/2; d = 0; break;
    case 2: a = 0; alpha = M_PI/2; d = 0; break;
    case 3: a = 0.045; alpha = -M_PI/2; d = 0.55; break;
    case 4: a = -0.045; alpha = M_PI/2; d = 0; break;
    case 5: a = 0; alpha = -M_PI/2; d = 0.3; break;
    case 6: a = 0; alpha = M_PI/2; d = 0; break;
    case 7: a = 0; alpha = 0; d = 0.060; break;
    default: a = 0; alpha = 0; d = 0; break;
    }
    double c = cos(joint_angles[i-1]);
    double s = sin(joint_angles[i-1]);

    double A_data[16] = {c, -s*cos(alpha), s*sin(alpha), a*c, s, c*cos(alpha), -c*sin(alpha), a*s,
			 0, sin(alpha), cos(alpha), d, 0, 0, 0, 1};
    memcpy(A[0], A_data, 16*sizeof(double));
    matrix_vec_mult(P,A,P,4,4);
    matrix_vec_mult(N,A,N,4,4);
  }

  //dbug
  //printf("transformed to base frame in %.4f ms\n", get_time_ms() - t0);
  //t0 = get_time_ms();

  //double A_data[16] = {1,  0,  0, -.44, 0,  0,  1,  .28, 0, -1,  0,  .50, 0,  0,  0,  1};
  //double A_data[16] = {.9874, -0.1580, 0, -0.44,  0, 0, 1, .28,  -.1580, -.9874, 0, .55,  0, 0, 0, 1};
  //double theta = M_PI/20.0;
  double theta = .0457;  // 01/29/14
  double c = cos(theta);
  double s = sin(theta);
  //double A_data[16] = {c, -s, 0, -.44,  0, 0, 1, .28,  -s, -c, 0, .55,  0, 0, 0, 1};
  double A_data[16] = {c, -s, 0, -.47,  0, 0, 1, .27,  -s, -c, 0, .53,  0, 0, 0, 1};  // 01/29/14
  memcpy(A[0], A_data, 16*sizeof(double));
  matrix_vec_mult(P,A,P,4,4);
  matrix_vec_mult(N,A,N,4,4);

  //printf("transformed to table frame in %.4f ms\n", get_time_ms() - t0);

  sub(N,N,P,3);
  normalize(N,N,3);

  double *paddle_pose;
  safe_calloc(paddle_pose, 6, double);
  paddle_pose[0] = P[0];
  paddle_pose[1] = P[1];
  paddle_pose[2] = P[2];
  paddle_pose[3] = N[0];
  paddle_pose[4] = N[1];
  paddle_pose[5] = N[2];

  //cleanup
  free_matrix2(A);

  return paddle_pose;
}


double **paddle_jacobian(double *joint_angles)
{
  double c1 = cos(joint_angles[0]);
  double c2 = cos(joint_angles[1]);
  double c3 = cos(joint_angles[2]);
  double c4 = cos(joint_angles[3]);
  double c5 = cos(joint_angles[4]);
  double c6 = cos(joint_angles[5]);
  double c7 = cos(joint_angles[6]);

  double s1 = sin(joint_angles[0]);
  double s2 = sin(joint_angles[1]);
  double s3 = sin(joint_angles[2]);
  double s4 = sin(joint_angles[3]);
  double s5 = sin(joint_angles[4]);
  double s6 = sin(joint_angles[5]);
  double s7 = sin(joint_angles[6]);

  double **J = new_matrix2(6,7);

  J[0][0] = c1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(-2.249448792205275E15/2.251799813685248E15)+s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-c1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16)-s1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15);
  J[0][1] = c1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(-2.249448792205275E15/2.251799813685248E15)+s1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16);
  J[0][2] = c1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(-8.22971480784957E14/1.801439850948198E16)-s1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-c1*c2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c2*s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16);
  J[0][3] = c1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(-2.249448792205275E15/2.251799813685248E15)+s1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)-c1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-s1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15);
  J[0][4] = c1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(-8.22971480784957E14/1.801439850948198E16)-s1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-c1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+s1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16);
  J[0][5] = c1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-c1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)+s1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16);
  J[1][1] = -c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1);
  J[1][2] = s2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1));
  J[1][3] = -c2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c3*s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1));
  J[1][4] = s2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))+c2*s4*s5*s6*(4.0/2.5E1);
  J[1][5] = s2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))-c2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1));
  J[2][0] = c1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-c1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15)+s1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16);
  J[2][1] = c1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15);
  J[2][2] = c1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(-2.249448792205275E15/2.251799813685248E15)+s1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*c2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c2*s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15);
  J[2][3] = c1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)+s1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)-c1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+s1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16);
  J[2][4] = c1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(-2.249448792205275E15/2.251799813685248E15)+s1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15);
  J[2][5] = c1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)+s1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15);
  J[3][0] = c1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15)-c1*(s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)-c2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(8.22971480784957E14/1.801439850948198E16)-c1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)-s1*(s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)-c2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(2.249448792205275E15/2.251799813685248E15)+s1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16);
  J[3][1] = c1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)+s2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(2.249448792205275E15/2.251799813685248E15)-s1*(c2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)+s2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(8.22971480784957E14/1.801439850948198E16);
  J[3][2] = c1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c1*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)+s1*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)+c1*c2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-c2*s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-c1*c2*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)+c2*s1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16);
  J[3][3] = c1*(s2*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c2*c3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)))*(2.249448792205275E15/2.251799813685248E15)-s1*(s2*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c2*c3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)))*(8.22971480784957E14/1.801439850948198E16)+c1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)-s1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)-c1*s3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))*(8.22971480784957E14/1.801439850948198E16)-s1*s3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))*(2.249448792205275E15/2.251799813685248E15)+c1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15);
  J[3][4] = c1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+s1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c1*(c3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)+s1*(c3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)+c1*(c2*(s3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-c3*c4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))+s2*s4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)-s1*(c2*(s3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-c3*c4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))+s2*s4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)+c1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16);
  J[3][5] = c1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(-8.22971480784957E14/1.801439850948198E16)-s1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)-s1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)-c1*(s2*(c4*(s6*(4.0/2.5E1)+c6*c7)+c5*s4*(c6*(4.0/2.5E1)-c7*s6))+c2*(c3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))+s3*s5*(c6*(4.0/2.5E1)-c7*s6)))*(2.249448792205275E15/2.251799813685248E15)+s1*(s2*(c4*(s6*(4.0/2.5E1)+c6*c7)+c5*s4*(c6*(4.0/2.5E1)-c7*s6))+c2*(c3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))+s3*s5*(c6*(4.0/2.5E1)-c7*s6)))*(8.22971480784957E14/1.801439850948198E16)+c1*(s3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))-c3*s5*(c6*(4.0/2.5E1)-c7*s6))*(8.22971480784957E14/1.801439850948198E16)+s1*(s3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))-c3*s5*(c6*(4.0/2.5E1)-c7*s6))*(2.249448792205275E15/2.251799813685248E15);
  J[3][6] = c1*(s2*(s4*(c7*s5+c5*c6*s7)+c4*s6*s7)-c2*(c3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)+s3*(c5*c7-c6*s5*s7)))*(2.249448792205275E15/2.251799813685248E15)-s1*(s2*(s4*(c7*s5+c5*c6*s7)+c4*s6*s7)-c2*(c3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)+s3*(c5*c7-c6*s5*s7)))*(8.22971480784957E14/1.801439850948198E16)+c1*(s3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)-c3*(c5*c7-c6*s5*s7))*(8.22971480784957E14/1.801439850948198E16)+s1*(s3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)-c3*(c5*c7-c6*s5*s7))*(2.249448792205275E15/2.251799813685248E15);
  J[4][1] = c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1)+c2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)));
  J[4][2] = -s2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))+s2*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)));
  J[4][3] = c2*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c3*s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1));
  J[4][4] = -s2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*(s3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-c3*c4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))+c2*s4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))-c2*s4*s5*s6*(4.0/2.5E1);
  J[4][5] = -c2*(c4*(s6*(4.0/2.5E1)+c6*c7)+c5*s4*(c6*(4.0/2.5E1)-c7*s6))-s2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+c2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1))+s2*(c3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))+s3*s5*(c6*(4.0/2.5E1)-c7*s6));
  J[4][6] = c2*(s4*(c7*s5+c5*c6*s7)+c4*s6*s7)+s2*(c3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)+s3*(c5*c7-c6*s5*s7));
  J[5][0] = c1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(-8.22971480784957E14/1.801439850948198E16)-s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(c2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))+s2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(8.22971480784957E14/1.801439850948198E16)-c1*(s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)-c2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(2.249448792205275E15/2.251799813685248E15)+c1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)+s1*(s2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)-c2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(8.22971480784957E14/1.801439850948198E16)+s1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15);
  J[5][1] = c1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(-8.22971480784957E14/1.801439850948198E16)-s1*(s2*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))-c2*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)+1.1E1/2.0E1))*(2.249448792205275E15/2.251799813685248E15)-c1*(c2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)+s2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(8.22971480784957E14/1.801439850948198E16)-s1*(c2*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)+1.1E1/2.0E1)+s2*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7))))*(2.249448792205275E15/2.251799813685248E15);
  J[5][2] = c1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(c3*(9.0/2.0E2)+c3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)-s1*(c3*(-9.0/2.0E2)+c3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)-c1*c2*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-c2*s1*(s3*(9.0/2.0E2)+s3*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))+c3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)+c1*c2*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)+c2*s1*(s3*(9.0/2.0E2)-s3*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15);
  J[5][3] = c1*(s2*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c2*c3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)))*(-8.22971480784957E14/1.801439850948198E16)-s1*(s2*(c4*(9.0/2.0E2)+c4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-s4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))+c2*c3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1)))*(2.249448792205275E15/2.251799813685248E15)-c1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)-s1*(s2*(c4*(-9.0/2.0E2)+s4*(c6*(4.0/2.5E1)+3.0/1.0E1)+c4*c5*s6*(4.0/2.5E1))-c2*c3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)-c1*s3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))*(2.249448792205275E15/2.251799813685248E15)+s1*s3*(s4*(9.0/2.0E2)+s4*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*(c6*(4.0/2.5E1)-c7*s6+3.0/1.0E1))*(8.22971480784957E14/1.801439850948198E16)+c1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*s3*(s4*(9.0/2.0E2)+c4*(c6*(4.0/2.5E1)+3.0/1.0E1)-c5*s4*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16);
  J[5][4] = c1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15)-s1*(c3*c5*s6*(4.0/2.5E1)-c4*s3*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)+c1*(c3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)-s1*(c3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))+c4*s3*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)-c1*(c2*(s3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-c3*c4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))+s2*s4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(8.22971480784957E14/1.801439850948198E16)-s1*(c2*(s3*(s5*s7-c5*(s6*(4.0/2.5E1)+c6*c7))-c3*c4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))+s2*s4*(c5*s7+s5*(s6*(4.0/2.5E1)+c6*c7)))*(2.249448792205275E15/2.251799813685248E15)-c1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-s1*(c2*(c5*s3*s6*(4.0/2.5E1)+c3*c4*s5*s6*(4.0/2.5E1))-s2*s4*s5*s6*(4.0/2.5E1))*(2.249448792205275E15/2.251799813685248E15);
  J[5][5] = c1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(-2.249448792205275E15/2.251799813685248E15)+s1*(s3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))-c3*c6*s5*(4.0/2.5E1))*(8.22971480784957E14/1.801439850948198E16)-c1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(8.22971480784957E14/1.801439850948198E16)-s1*(c2*(c3*(s4*s6*(4.0/2.5E1)-c4*c5*c6*(4.0/2.5E1))+c6*s3*s5*(4.0/2.5E1))+s2*(c4*s6*(4.0/2.5E1)+c5*c6*s4*(4.0/2.5E1)))*(2.249448792205275E15/2.251799813685248E15)+c1*(s2*(c4*(s6*(4.0/2.5E1)+c6*c7)+c5*s4*(c6*(4.0/2.5E1)-c7*s6))+c2*(c3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))+s3*s5*(c6*(4.0/2.5E1)-c7*s6)))*(8.22971480784957E14/1.801439850948198E16)+s1*(s2*(c4*(s6*(4.0/2.5E1)+c6*c7)+c5*s4*(c6*(4.0/2.5E1)-c7*s6))+c2*(c3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))+s3*s5*(c6*(4.0/2.5E1)-c7*s6)))*(2.249448792205275E15/2.251799813685248E15)+c1*(s3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))-c3*s5*(c6*(4.0/2.5E1)-c7*s6))*(2.249448792205275E15/2.251799813685248E15)-s1*(s3*(s4*(s6*(4.0/2.5E1)+c6*c7)-c4*c5*(c6*(4.0/2.5E1)-c7*s6))-c3*s5*(c6*(4.0/2.5E1)-c7*s6))*(8.22971480784957E14/1.801439850948198E16);
  J[5][6] = c1*(s2*(s4*(c7*s5+c5*c6*s7)+c4*s6*s7)-c2*(c3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)+s3*(c5*c7-c6*s5*s7)))*(-8.22971480784957E14/1.801439850948198E16)-s1*(s2*(s4*(c7*s5+c5*c6*s7)+c4*s6*s7)-c2*(c3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)+s3*(c5*c7-c6*s5*s7)))*(2.249448792205275E15/2.251799813685248E15)+c1*(s3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)-c3*(c5*c7-c6*s5*s7))*(2.249448792205275E15/2.251799813685248E15)-s1*(s3*(c4*(c7*s5+c5*c6*s7)-s4*s6*s7)-c3*(c5*c7-c6*s5*s7))*(8.22971480784957E14/1.801439850948198E16);

 return J;
}


double *paddle_to_joints_displacement(double *joint_angles, double *dp)
{
  double **J = paddle_jacobian(joint_angles);

  double *dj;
  safe_calloc(dj, 7, double);
  memcpy(dj, dp, 6*sizeof(double));

  LAPACKE_dgels(LAPACK_ROW_MAJOR, 'N', 6, 7, 1, J[0], 7, dj, 1);

  free_matrix2(J);

  return dj;
}


double *paddle_to_joints_displacement_weighted(double *joint_angles, double *dp, double *w)
{
  double **J = paddle_jacobian(joint_angles);

  int i,j;
  for (i = 0; i < 6; i++) {
    for (j = 0; j < 7; j++) {
      J[i][j] *= w[j];
    }
  }

  double *dj;
  safe_calloc(dj, 7, double);
  memcpy(dj, dp, 6*sizeof(double));

  LAPACKE_dgels(LAPACK_ROW_MAJOR, 'N', 6, 7, 1, J[0], 7, dj, 1);

  free_matrix2(J);

  for (j = 0; j < 7; j++)
    dj[j] *= w[j];

  return dj;
}


double *paddle_to_joints(double *paddle, double *ja0)
{
  double q[7];  // tmp joint angles
  memcpy(q, ja0, 7*sizeof(double));
  double w = .02;  // paddle normal weight
  double w0 = .005;  // weight on joint dist to ja0 (for trajectory smoothness)
  double *pdes = paddle;
  double *ndes = &paddle[3];

  double *p = joints_to_paddle(q);  // paddle position + normal
  double *n = &p[3];
  double fmin = .5*dist2(p, pdes, 3) + w*(1 - dot(n, ndes, 3));
  double qmin[7];
  memcpy(qmin, q, 7*sizeof(double));
  free(p);


  double s = 1;  // step size
  double a[3] = {.618, 1, 1.618};  // line search

  int max_iter = 200;
  int iter;
  for (iter = 0; iter < max_iter; iter++) {

    // compute the gradient of f w.r.t w
    double dfdq[7];
    p = joints_to_paddle(q);
    double v[6] = {p[0]-pdes[0], p[1]-pdes[1], p[2]-pdes[2], -w*ndes[0], -w*ndes[1], -w*ndes[2]};
    double **dpndq = paddle_jacobian(q);
    vec_matrix_mult(dfdq, v, dpndq, 6, 7);
    free(p);
    free_matrix2(dpndq);
    for (int j = 0; j < 7; j++)
      dfdq[j] += 2*w0*(q[j] - ja0[j]);

    // take steps in the direction of the gradient and pick the one with min f value
    double f[3];
    for (int i = 0; i < 3; i++) {
      double q2[7];
      for (int j = 0; j < 7; j++)
	q2[j] = q[j] - a[i]*s*dfdq[j];
      p = joints_to_paddle(q2);
      n = &p[3];
      f[i] = .5*dist2(p, pdes, 3) + w*(1 - dot(n, ndes, 3)) + w0*dist2(q2,ja0,7);
      free(p);
    }
    int i = find_min(f,3);

    s *= a[i];  // update step size

    // take the step in joint angle space
    for (int j = 0; j < 7; j++)
      q[j] -= s*dfdq[j];

    // update best joint angles solution
    if (f[i] < fmin) {
      fmin = f[i];
      memcpy(qmin, q, 7*sizeof(double));

      // check for convergence
      if (fmin < 1e-6) {
	break;
      }
    }
  }
  //printf("(iter=%d, fmin=%f) ", iter, fmin);  //dbug

  double *joint_angles;
  safe_calloc(joint_angles, 7, double);
  memcpy(joint_angles, qmin, 7*sizeof(double));

  return joint_angles;
}
