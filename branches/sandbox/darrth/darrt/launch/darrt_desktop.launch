<launch>
  
    <arg name="stereo" default="false"/>
    <arg name="joy" default="false" />
    <arg name="haptics" default="false" />
    <arg name="nav" default="true" />
    <arg name="tf_throttled" default="false" /> 

    <arg name="rviz_args" default=""/>
    <arg name="rviz_debug" default="false"/>

    <!-- local joystick node, remapped to publish to joy_local -->
    <include if="$(arg joy)" file="$(find pr2_interactive_manipulation)/launch/joy.launch"/>

    <!-- Hack to create a temporary rviz file... hopefully $HOME is defined on all the systems we use... --> 
    <arg name="rviz_config_file" value="$(env HOME)/.ros/pr2_interactive_manipulation_temp.vcg"/>
	  <node pkg="pr2_interactive_manipulation" type="adjust_rviz_config.py" 
		args="$(find darrt)/config/rviz_darrt.vcg  $(arg rviz_config_file) $(arg stereo) $(arg nav)" 
		  name="rviz_config_adjuster" output="screen" />
    
    <!-- rviz -->
    <arg if="$(arg rviz_debug)" name="rviz_prefix" value="xterm -e gdb -ex run --args"/>
    <arg unless="$(arg rviz_debug)" name="rviz_prefix" value=""/>
    
    <node pkg="rviz" launch-prefix="$(arg rviz_prefix)" name="$(anon rviz-1)" type="rviz" respawn="false" output="screen"
     args="-d $(arg rviz_config_file) -s $(find pr2_interactive_manipulation)/images/splash.png $(arg rviz_args)"> 
      <remap if="$(arg tf_throttled)" from="tf" to="tf_throttled"/>
    </node>

<!--
    <include file="$(find haptic_ghosted_gripper)/launch/haptics.launch" >
      <arg name="haptics" value="$(arg haptics)" />
      <arg name="stereo" value="$(arg stereo)" />
    </include>

    <node pkg="pr2_interactive_manipulation" type="grasp_caller" name="grasp_caller" output="screen" />
-->

</launch>
